--- /tmp/rfcommands/rfcommands/compile_step_stats.py	2025-09-22 13:35:59.826336638 -0500
+++ modified_rfc_tools/compile_step_stats.py	2025-09-22 13:33:12.114679171 -0500
@@ -42,7 +42,7 @@
                 continue
             log_lines.append(this_line)
     if len(log_lines) != 6:
-        raise IOError("The file {file_name} has to contain exactly 6 lines".format(log_file) )
+        raise IOError("The file {} has to contain exactly 6 lines".format(log_file) )
     return list( map( lambda this_line: int( this_line.split()[0] ) ,log_lines[:5] ) )
 
 def get_count_from_qpass_file(qpass_file):
@@ -56,8 +56,8 @@
     return int(this_line)
 
 
-def get_overall_statistics(cutadapt_log, filter_log, transcriptome_log, 
-                           qpass_count_file, dedup_file):
+def get_overall_statistics(cutadapt_log, filter_log, transcriptome_log,
+                           qpass_count_file, dedup_file, label_prefix="transcriptome"):
     overall_statistics = OrderedDict()
     overall_statistics["total_reads"], overall_statistics["clipped_reads"] = \
           get_reads_from_cutadapt_log(cutadapt_log)
@@ -67,19 +67,19 @@
     overall_statistics["filter_kept"]  = filter_stats[UNAL_INDEX]
     
     transcriptome_stats = read_bowtie2_log(transcriptome_log)
-    overall_statistics["transcriptome_aligned_once"] = transcriptome_stats[ONCE_INDEX]
-    
-    overall_statistics["transcriptome_aligned_many"] = transcriptome_stats[MANY_INDEX]
+    overall_statistics[f"{label_prefix}_aligned_once"] = transcriptome_stats[ONCE_INDEX]
+
+    overall_statistics[f"{label_prefix}_aligned_many"] = transcriptome_stats[MANY_INDEX]
 
-    overall_statistics["transcriptome_total_aligned"] = \
-         overall_statistics["transcriptome_aligned_once"] + \
-         overall_statistics["transcriptome_aligned_many"]
+    overall_statistics[f"{label_prefix}_total_aligned"] = \
+         overall_statistics[f"{label_prefix}_aligned_once"] + \
+         overall_statistics[f"{label_prefix}_aligned_many"]
 
-    overall_statistics["transcriptome_unaligned"] = transcriptome_stats[UNAL_INDEX]
+    overall_statistics[f"{label_prefix}_unaligned"] = transcriptome_stats[UNAL_INDEX]
     
-    overall_statistics["qpass_aligned_reads"] = get_count_from_qpass_file(qpass_count_file)
+    overall_statistics[f"{label_prefix}_qpass_aligned_reads"] = get_count_from_qpass_file(qpass_count_file)
 
-    overall_statistics["after_dedup"] = get_count_from_dedup(dedup_file)
+    overall_statistics[f"{label_prefix}_after_dedup"] = get_count_from_dedup(dedup_file)
     
     """
     genome_stats = read_bowtie2_log(genome_log)
@@ -102,15 +102,16 @@
 	stats_df.to_csv(csv_file) 
 
 
-def compile(out,     cutadapt, filter, trans, 
-            quality,   dedup,  name):
+def compile(out,     cutadapt, filter, trans,
+            quality,   dedup,  name, label_prefix="transcriptome"):
 
     overall_statistics = get_overall_statistics(
-                                cutadapt_log      = cutadapt, 
-                                filter_log        = filter, 
-                                transcriptome_log = trans, 
+                                cutadapt_log      = cutadapt,
+                                filter_log        = filter,
+                                transcriptome_log = trans,
                                 qpass_count_file  = quality,
-                                dedup_file        = dedup)
+                                dedup_file        = dedup,
+                                label_prefix      = label_prefix)
 
     print_overall_statistics(stats_dict  = overall_statistics, 
     	                     sample_name = name, 
